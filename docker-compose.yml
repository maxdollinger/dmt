services:
  migrate:
    image: migrate/migrate
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://user:password@postgres:5432/dmt?sslmode=disable",
        "up",
      ]
    volumes:
      - ./internal/migrations:/migrations
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"

  notification-service:
    image: greenbone/exercise-admin-notification
    platform: linux/amd64
    ports:
      - "8080:8080"
    restart: unless-stopped

  app:
    build:
      context: .
      no_cache: true
    pull_policy: build
    ports:
      - "3000:3000"
    environment:
      - API_KEY=some-api-key
      - DATABASE_URL=postgres://user:password@postgres:5432/dmt?sslmode=disable
      - PORT=3000
      - NOTIFY_URL=http://notification-service:8080/api/notify
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
      notification-service:
        condition: service_started
    restart: unless-stopped

  postgres:
    image: postgres:17-alpine
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=dmt
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d dmt"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
